dnase <- subset(dnase, !duplicated(id))
dnase$time <- dnase$tstop - dnase$tstart
result <- survregVB(Surv(time, infect) ~ trt + fev, dnase,
501, 500, c(4.4, 0.25, 0.04), 1,
max_iteration = 100, threshold = 0.0005)
result
library(rstan)
aft_model2 <- survregVB(Surv(time, status) ~ age + factor(sex) + factor(ph.ecog),
data = lung,
alpha_0 = 500, omega_0 = 501,
mu_0 = c(6.329952675,-0.007505414,0.493194214,-0.295540100,-0.826026517,-1.033889051), v_0 = 1,
max_iteration = 10000000, threshold = 0.0005)
aft_model2 <- survregVB(Surv(time, status) ~ age + factor(sex) + factor(ph.ecog),
data = lung,
alpha_0 = 500, omega_0 = 501,
mu_0 = c(6.329952675,-0.007505414,0.493194214,-0.295540100,-0.826026517,-1.033889051), v_0 = 1,
max_iteration = 10000000, threshold = 0.1)
aft_model2
aft_model <- survreg(Surv(time, status) ~ age + factor(sex) + factor(ph.ecog),
data = lung, dist = "loglogistic")
aft_model
summary(aft_model2)
aft_model2 <- survregVB(Surv(time, status) ~ age + factor(sex) + factor(ph.ecog),
data = lung,
alpha_0 = 500, omega_0 = 501,
mu_0 = c(6.329952675,-0.007505414,0.493194214,-0.295540100,-0.826026517,-1.033889051), v_0 = 1,
max_iteration = 10000000, threshold = 0.01)
aft_model2
aft_model2 <- survregVB(Surv(time, status) ~ age + factor(sex) + factor(ph.ecog),
data = lung,
alpha_0 = 500, omega_0 = 501,
mu_0 = c(6.329952675,-0.007505414,0.493194214,-0.295540100,-0.826026517,-1.033889051), v_0 = 1,
max_iteration = 10000000, threshold = 0.001)
aft_model2
aft_model2 <- survregVB(Surv(time, status) ~ age + factor(sex) + factor(ph.ecog),
data = lung,
alpha_0 = 500, omega_0 = 501,
mu_0 = c(6.329952675,-0.007505414,0.493194214,-0.295540100,-0.826026517,-1.033889051), v_0 = 1,
max_iteration = 10000000, threshold = 0.0005)
summary(aft_model2)
aft_model
aft_model2
aft_model2
summary(aft_model2)
library(devtools)
use_r('survregVB_frailty.fit.R')
mat <- scan('~/Downloads/GSE102287-GPL570_series_matrix.txt')
source("http://bioconductor.org/biocLite.R")
source("~/.active-rstudio-document", echo=TRUE)
library("GEOquery")
gse=getGEO(filename="~/Downloads/GSE102287-GPL570_series_matrix.txt.gz")
view(gse)
gse
View(gse)
gse$type
head(gse)
gse
?gse
gse$experimentData
View(gse)
head(Meta(gse))
gse=getGEO(filename="~/Downloads/GSE102287-GPL570_series_matrix.txt.gz")
source("~/.active-rstudio-document", echo=TRUE)
names(GSMList(gse))
source("~/.active-rstudio-document", echo=TRUE)
gsm
gsm <- getGEO(filename=system.file("~/Downloads/GSE102287-GPL570_series_matrix.txt.gz",package="GEOquery"))
gsm <- getGEO(filename=system.file("~/Downloads/GSE102287-GPL23871_series_matrix.txt.gz",package="GEOquery"))
gsm <- getGEO(filename=system.file("extdata/GSE102287-GPL23871_series_matrix.txt.gz",package="GEOquery"))
library(GEOquery)
gds <- getGEO(filename=system.file("extdata/GDS507.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/SE102287.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/GSE102287_family.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/GDS507.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/GPL570.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/GSE102287ID",package="GEOquery"))
system.file(package="GEOquery")
ls "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/GEOquery"
gse=getGEO(filename="~/Downloads/GSE102287-GPL570_series_matrix.txt.gz")
gse=getGEO(filename="~/Downloads/GSE102287_family.soft.gz")
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz")
View(gse)
head(Meta(gse))
Table(gse)[1:5,]
Table(gse)
gse
head(gse)
gse
View(gse)
head(Meta(gse))
names(GSMList(gse))
GSMList(gse)[[1]]
names(GPLList(gse))
gse=getGEO(filename="~/Downloads/GSE102286_family.soft.gz")
View(gse)
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz")
View(gse)
GSMList(gse)
GSMList(gse)[1]
getGEO('GSE101929',GSEMatrix=TRUE)
gse101929 <- getGEO('GSE101929',GSEMatrix=TRUE)
show(gse101929)
show(pData(phenoData(gse101929[[1]]))[1:5,c(1,6,8)])
gsmplatforms <- lapply(GSMList(gse101929),function(x) {Meta(x)$platform_id})
View(gse101929)
Meta(gse101929)
GSMlist(gse101929)
library(GEOquery)
GSMlist(gse101929)
?GSMlist
gse101929 <- getGEO('GSE101929',GSEMatrix=TRUE)
Meta(gse)
head(Meta(gse))
names(GSMList(gse))
gse <- getGEO('GSE101929',GSEMatrix=TRUE)
names(GSMList(gse))
gse <- getGEO(filename=/var/folders/nn/1qb02csx4sb2zczwjpxzzjyr0000gn/T//Rtmp8RA83a/GPL570.soft.gz )
gse <- getGEO(filename="/var/folders/nn/1qb02csx4sb2zczwjpxzzjyr0000gn/T//Rtmp8RA83a/GPL570.soft.gz")
head(Meta(gse))
View(gse)
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz")
View(gse)
head(Meta(gse))
names(GSMList(gse))
gsmplatforms <- lapply(GSMList(gse),function(x) {Meta(x)$platform_id})
gsmplatforms
head(gsmplatforms)
gsmlist = Filter(function(gsm) {Meta(gsm)$platform_id=='GPL570'},GSMList(gse))
length(gsmlist)
Table(gsmlist[[1]])[1:5,]
Columns(gsmlist[[1]])[1:5,]
probesets <- Table(GPLList(gse)[[1]])$ID
data.matrix <- do.call('cbind',lapply(gsmlist,function(x)
{tab <- Table(x)
mymatch <- match(probesets,tab$ID_REF)
return(tab$VALUE[mymatch])
}))
data.matrix
data.matrix <- apply(data.matrix,2,function(x) {as.numeric(as.character(x))})
data.matrix <- log2(data.matrix)
data.matrix[1:5,]
require(Biobase)
rownames(data.matrix) <- probesets
data.matrix
head(data.matrix)
colnames(data.matrix) <- names(gsmlist)
pdata <- data.frame(samples=names(gsmlist))
rownames(pdata) <- names(gsmlist)
pdata
pheno <- as(pdata,"AnnotatedDataFrame")
eset2 <- new('ExpressionSet',exprs=data.matrix,phenoData=pheno)
eset2
pData(eset2)
eset
eset2
source("~/.active-rstudio-document", echo=TRUE)
m <- exprs(eset)
pdata <- pData(eset)
d <- cbind(pdata, t(m))
d
head(d)
eset
eset$featureNames(eset)[1:5]
featuresNames(eset)[1:5]
featureNames(eset)[1:5]
eset$samples
eset$samples[1:5]
head(Meta(eset$samples[1]))
eset$samples[1]
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz")
View(gse)
gse$gsms
dim(pData(gse[[1]]))
library(GEOquery)
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz", GSEMatrix = TRUE)
show(gse)
dim(pData(gse[[1]]))
show(gse)
View(gse)
getGSEDataTables(gse)
dfl = getGSEDataTables("GSE101929")
dfl
head(dfl)
dfl = getGSEDataTables("GSE101929_family")
GSMList(gse)
GSMList(gse)[1]
GSMList(gse)[[1]]
GSMList(gse)[[1]][1]
GSMList(gse)[[1]]
mygsm <- GSMList(gse)[[1]]
Table(mygsm)[1:5,]
Columns(mygsm)
head(Meta(mygsm))
head(Meta(gsm))
Meta(mygsm)
Meta(mygsm)$characteristics_ch1
gsm_list <- GSMList(gse)
View(gsm_list)
gsm_list[1]
gsm <- gsm_list[1]
View(gsm)
gsm2 <- gsm_list[[1]]
View(gsm2)
View(gsm_list)
View(gsm2)
View(gsm)
View(gsm2)
names(GSMList(gse))
names(GPLList(gse))
source("~/.active-rstudio-document", echo=TRUE)
eset$samples
eset$samples[1]
clas(eset$samples[1])
clas2(eset$samples[1])
class(eset$samples[1])
samplesNames(eset)
samplesNames(eset)
sampleNames(eset)
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz")
gsmplatforms <- lapply(GSMList(gse),function(x) {Meta(x)$platform_id})
gsmlist = Filter(function(gsm) {Meta(gsm)$platform_id=='GPL570'},GSMList(gse))
Table(gsmlist[[1]])[1:5,]
gsmlist
gsmlist[[1]]
gsmlist[[1]]$characteristics_ch1
gsmlist = Filter(function(gsm) {Meta(gsm)$platform_id=='GPL570'},GSMList(gse))
gsm[[1]]
gsmlist[[1]]$characteristics_ch1
mygsm <- gmslist[[1]]
gsmlist = Filter(function(gsm) {Meta(gsm)$platform_id=='GPL570'},GSMList(gse))
mygsm = gsmlist[[1]]
mygsm[1:4]
mygsm
mygsm$characteristics_ch1
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz", GSEMatrix = TRUE)
mygsm <- GSMList(gse)[[1]]
gsmlist <- GSMList(gse)
gsmlist[[1]]
gsmlist[[1]]$characteristics_ch1
mygsm <- GSMList(gse)[[1]]
mygsm
gse=getGEO(filename="~/Downloads/GSE101929_family.soft.gz")
gsmlist <- GSMList(gse)
gsmlist[[1]]
gse
names(GSMList(gse))
GSMList(gse)[[1]]
mygsm <- GSMList(gse)[[1]]
head(Meta(mygsm))
Meta(mygsm)
Meta(mygsm)$characteristics_ch1
type(Meta(mygsm)$characteristics_ch1)
Meta(mygsm)$characteristics_ch1[1]
Meta(mygsm)$characteristics_ch1[2]
gsmlist <- GSMList(gse)
mygsm <- gsmlist[[1]]
metadata <- Meta(mygsm)
characteristics <- Meta(mygsm)$characteristics_ch1
characteristics
length(characteristics)
length(gsmlist)
type(gsmlist)
?rep
gsmlist <- GSMList(gse)
mylist <- list()
for (i in 1:length(gsmlist)) {
mygsm <- gsmlist[[i]]
characteristics <- Meta(mygsm)$characteristics_ch1
mylist[i] <- characteristics
}
mylist
mylist[1]
mylist[[1]]
mygsm <- gsmlist[[1]]
mygsm
Meta(mygsm)$characteristics_ch1
info <- Meta(mygsm)$characteristics_ch1
info
df <- data.frame(info)
df
View(df)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
items(gsmlist)
mygsm <- gsmlist[1]
mygsm
Show(mygsm)
view(mygsm)
View(mygsm)
mygsm <- gsmlist[[1]]
?GeoDatatable
Metadata(mygsm)
Meta(mygsm)
Meta(mygsm)$characteristics_ch1
data <- Meta(mygsm)$characteristics_ch1
dict <- setNames(
sapply(data, function(x) strsplit(x, ": ")[[1]][2]),
sapply(data, function(x) strsplit(x, ": ")[[1]][1])
)
dict
df <- as.data.frame(t(dict), stringsAsFactors = FALSE)
df
source("~/.active-rstudio-document", echo=TRUE)
head(df)
view(df)
View(df)
library(Geoquery)
library("GEOquery")
df[1]
subset_df <- df[, c[2, 5, 8, 11]]
subset_df <- df[, c(2, 5, 8, 11)]
subset_df
head(subset_df)
?lung
library(survival)
?df
?lung
lung <- df[, c(2, 5, 8, 11)]
lung$Status <- ifelse(lung$Status == "alive", 0, 1)
head(lung)
colnames(lung) <- c("age","stage", "time", "status")
lung
head(lung)
lung$status <- ifelse(lung$status == "alive", 0, 1)
head(lung)
library(devtools)
library(survival)
source("~/.active-rstudio-document", echo=TRUE)
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "log-logistic")
head(lung)
lung$time <- as.numeric(lung$time)
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "log-logistic")
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "loglogistic")
summary(survfit)
lung$age <- as.numeric(lung$age)
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "loglogistic")
summary(survfit)
load_all()
survfitVB <- survregVB(Surv(time, status)~age+stage, data=lung, alpha_0=500, omega_0=501, mu_0=c(0,0,0,0), v_0=1)
survfitVB <- survregVB(Surv(time, status)~age+stage, data=lung, alpha_0=500, omega_0=501, mu_0=c(0,0,0,0), v_0=1, max_iteration = 1000, threshold = 0.0005)
survfitVB <- survregVB(Surv(time, status)~age+stage, data=lung, alpha_0=500, omega_0=501, mu_0=c(0,0,0,0), v_0=1, max_iteration = 10000, threshold = 0.0005)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
my.N <- nrow(my.rhDNase)
time <- my.rhDNase$time
status <- my.rhDNase$infect
X <- matrix(c(rep(1, N), my.rhDNase$trt, my.rhDNase$fev), nrow = N)
K <- ncol(X)
stan_data <- list(
N = N,
time = time,
status = status,
X = X,
K = K
)
fit <- stan(model_code = stan_model_code, data = stan_data, iter = 2000, chains = 4)
N <- nrow(my.rhDNase)
time <- my.rhDNase$time
status <- my.rhDNase$infect
X <- matrix(c(my.rhDNase$trt, my.rhDNase$fev), nrow = N)
K <- ncol(X)
stan_data <- list(
N = N,
time = time,
status = status,
X = X,
K = K
)
fit <- stan(model_code = stan_model_code, data = stan_data, iter = 2000, chains = 4)
head(lung)
lung$status
head(df)
lung <- df[, c(2, 5, 8, 11)]
colnames(lung) <- c("age","stage", "time", "status")
lung$age <- as.numeric(lung$age)
lung$time <- as.numeric(lung$time)
lung$status <- ifelse(lung$status == "Alive", 0, 1)
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "log-logistic")
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "loglogistic")
summary(survfit)
survfitVB <- survregVB(Surv(time, status)~age+stage, data=lung, alpha_0=500, omega_0=501, mu_0=c(0,0,0,0), v_0=1, max_iteration = 1000, threshold = 0.0005)
summary(survfitVB)
head(lung)
view(lung)
View(lung)
mean(lung$age)
lung$stage
range(lung$age)
gse=getGEO(filename="~/Downloads/GSE102287_family.soft.gz")
gsmlist <- GSMList(gse)
mygsm <- gsmlist[[1]]
data <- Meta(mygsm)
View(data)
vie(df)
view(df)
Viwe(df)
View(df)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
head(df)
View(df)
df.loc[df['rrace'] == 'AA']
df[df['race']=='AA']
subset(df, age=='AA')
newdf <- subset(df, age=='AA')
newdf
View(newdf)
View9df
View(df)
# Initialize the dataframe
df <- data.frame()
# Loop through each item in gsmlist
for (i in 1:length(gsmlist)) {
mygsm <- gsmlist[[i]]  # Get the current sample from the list
# Extract characteristics of each sample
data <- Meta(mygsm)$characteristics_ch1
# Convert the data into a dictionary
dict <- setNames(
sapply(data, function(x) strsplit(x, ": ")[[1]][2]),  # Extract the value
sapply(data, function(x) strsplit(x, ": ")[[1]][1])   # Extract the key
)
# Convert the dictionary to a row
new_row <- as.data.frame(t(dict), stringsAsFactors = FALSE)
# Add the new row to the dataframe
df <- rbind(df, new_row)
}
View(df)
cancer <- df[df$race == 'AA',]
View(cancer)
cancer <- df[df$race == 'AA',c(2, 5, 8, 11)]
View(cancer)
cancer <- df[df$race == 'AA',c(2, 5, 8, 11)]
colnames(cancer) <- c("age","stage", "time", "status")
cancer$age <- as.numeric(cancer$age)
cancer$time <- as.numeric(cancer$time)
cancer$status <- ifelse(cancer$status == "Alive", 0, 1)
head(cancer)
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "loglogistic")
summary(survfit)
View(cancer)
?rhdnase
?dnase
?rhDNase
?lung
View(lung)
lung <- data(cancer, package="survival")
View(lung)
View(df)
View(cancer)
cancer <- df[df$race == 'AA',c(2, 5, 8, 11)]
colnames(cancer) <- c("age","stage", "time", "status")
cancer$age <- as.numeric(cancer$age)
cancer$time <- as.numeric(cancer$time)
View(cancer)
cancer$status <- ifelse(cancer$status == "Alive", 0, 1)
?rhDNase
cancer <- df[df$race == 'AA',c(2, 5, 8, 11)]
colnames(cancer) <- c("age","stage", "time", "status")
cancer$age <- as.numeric(cancer$age)
cancer$time <- as.numeric(cancer$time)
cancer$status <- ifelse(cancer$status == "Alive",1,0)
survfit <- survreg(Surv(time, status)~age+stage, data = lung, dist = "loglogistic")
survfit <- survreg(Surv(time, status)~age+stage, data = cancer, dist = "loglogistic")
summary(survfit)
cancer <- df[df$race == 'AA',c(2, 5, 8, 11)]
colnames(cancer) <- c("age","stage", "time", "status")
cancer$age <- as.numeric(cancer$age)
cancer$time <- as.numeric(cancer$time)
cancer$status <- ifelse(cancer$status == "Alive", 1, 0)
max(cancer$time)
survfit <- survreg(Surv(time, status, type='right')~age+stage, data = cancer, dist = "loglogistic")
summary(survfit)
survfitVB <- survregVB(Surv(time, status)~age+stage, data=cancer, alpha_0 = 500,
omega_0 = 501, mu_0 = c(8.09229, -0.00195, 0.01271, -0.20208, -1.26786), v_0 = 1)
survfitVB <- survregVB(Surv(time, status)~age+stage, data=cancer, alpha_0 = 500,
omega_0 = 501, mu_0 = c(8.09229, -0.00195, 0.01271, -0.20208), v_0 = 1)
summary(survfitVB)
survfit <- survreg(Surv(time, status)~age+stage, data = cancer, dist = "loglogistic")
summary(survfit)
surv.cancer = survfit(Surv(time, status)~1, data=cancer)
?survfit
?survfit.formula
data("cancer")
library(survival)
data("cancer")
view("cancer")
View("caner")
View("cancer")
View(cancer)
View(df)
count(df$gender)
?count
?counts
counts(df$gender)
summary(df)
summary(df$gender)
df$gender.value_counts()
df['gender'].value_counts()
df['gender'].value_counts()
df.groupby('gender').size()
df['gender'].value_counts()
length(df[df['gender']=='male'])
length(df[df['gender']=='male' & df['race'] == 'AA'])
length(df['race']=='AA')
mydf <- df[df['race']=='AA']
length(mydf[mydf['gender']=='female'])
mydf
head(mydf)
View(mydf)
df.groupby('gender').count()
View(cancer)
